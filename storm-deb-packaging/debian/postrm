#!/bin/sh
# postrm script for storm

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

#Note:
#Purge - remove everything
#Remove - remove everything except configuration files

#purge_files(){
  # TODO: remove configuration files (if any) here
  # ...
#}

case "$1" in
  remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

    # discussion why user should NOT be removed when package is uninstalled
    # http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=621833
    # locking account (instead of deleting)
    echo "Locking the storm user account"
    usermod -L -e 1 storm

    # clean up storm-local folder, not to keep state of old supervisor/nimbus
    echo "Cleaning up storm-local supervisors and workers."
    if [ -d "/usr/lib/storm/storm-local" ]; then
      # keep the nimbus state, not kill the topology implicitly
      rm -rf /usr/lib/storm/storm-local/supervisor
      rm -rf /usr/lib/storm/storm-local/workers
    fi
  ;;

  purge)
#  purge_files
  ;;

  *)
    echo "postrm called with unknown argument \`$1'" >&2
    exit 1
  ;;
esac

#DEBHELPER#

[ "$1" = "configure" ] && ldconfig

exit 0
